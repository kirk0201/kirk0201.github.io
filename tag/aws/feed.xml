<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator>
  <link href="http://localhost:4000/tag/aws/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2021-03-28T07:17:56+09:00</updated>
  <id>http://localhost:4000/tag/aws/feed.xml</id>

  
  
  

  
    <title type="html">IT Technical Blog | </title>
  

  
    <subtitle>나만의 TIL 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(1)</title>
      <link href="http://localhost:4000/server-deploy" rel="alternate" type="text/html" title="AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(1)" />
      <published>2021-02-09T18:00:00+09:00</published>
      <updated>2021-02-09T18:00:00+09:00</updated>
      <id>http://localhost:4000/server-deploy</id>
      <content type="html" xml:base="http://localhost:4000/server-deploy">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다.&lt;br /&gt;&lt;/span&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 
    &lt;br /&gt;혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다.
&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./server-deploy&quot;&gt;AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(1) &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./server-deploy2&quot;&gt;AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(2) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;저번 시간에 &lt;code class=&quot;highlighter-rouge&quot;&gt;클라이언트&lt;/code&gt;를 배포하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS 프로토콜&lt;/code&gt;을 이용하는 방법에 대해 복습해봤다.
이번에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;서버&lt;/code&gt;를 배포하는 방법에 대해 복습해 보겠다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt; 가상 환경을 선택하고 그 가상환경에 접속하는 방법을 알아볼 것이다.
개인적으로 가상환경은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;를 권장하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;Window10&lt;/code&gt;에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD&lt;/code&gt;로 접속하는 방법도 찾아보았다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;만약 CMD 창에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt;를 쳤을 때 여러 옵션이 열거되지 않는다면 OpenSSH를 설치 해야 한다&lt;/p&gt;

  &lt;p&gt;여기서는 간략하게만 설명하겠다 좀 더 정확한 정보는 직접 찾아보길 바란다
윈도우10 &lt;code class=&quot;highlighter-rouge&quot;&gt;시작&lt;/code&gt; 버튼 우클릭하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;앱 및 기능&lt;/code&gt; 클릭&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;선택적 기능&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;기능 추가&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;OpenSSH 클라이언트&lt;/code&gt;설치&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-aws-ec2를-설정-및-인스턴스에-연결&quot;&gt;1. AWS EC2를 설정 및 인스턴스에 연결&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
EC2는 클라우드 컴퓨팅 시스템이다.
EC2는 말 그대로 가상의 컴퓨터 환경이기 떄문에 특정한 작업을 통해 이 환경에서 서버를 열면
내 컴퓨터를 24시간 동안 켜서 서버를 유지할 필요 없이 서버를 24시간 열 수 있게 된다&lt;/p&gt;

&lt;p&gt;우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;로 이동해서 새로운 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;를 생성 하자
이 인스턴스를 통해 가상 환경에 접속할 수 있다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;로 이동하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스 시작&lt;/code&gt; 버튼을 클릭한다.&lt;/p&gt;

&lt;p&gt;아래와 같이 OS를 선택할 수 있다. 나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 20.04 LTS&lt;/code&gt;로 선택하고 넘어가자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111508053-9cc20980-878e-11eb-8dc4-0ee8372a789a.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 과정을 거치고 나면 &lt;code class=&quot;highlighter-rouge&quot;&gt;가상 환경 컴퓨터의 사양&lt;/code&gt;을 선택하는 단계이지만 프리티어에게는 선택 권한이 없다.
바로 다음 과정으로 넘어가자 &lt;code class=&quot;highlighter-rouge&quot;&gt;검토 및 시작&lt;/code&gt; 버튼을 누르자&lt;/p&gt;

&lt;p&gt;이제 가장 중요한 &lt;code class=&quot;highlighter-rouge&quot;&gt;프라이빗 키&lt;/code&gt;를 선택할 수 있는 창이 나온다
프라이빗 키란 가상 환경에 접속할 때 필요한 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안키&lt;/code&gt;라고 생각하면 편하겠다.
해당 키는 파일로 이루어져 있어 개인적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;구글 드라이브&lt;/code&gt;에 올려서 분실하는 일이 없도록 하자&lt;/p&gt;

&lt;p&gt;기존의 키가 있는 사람은 기존 키를 선택하면 되고 없다면 새 키를 발급 받도록 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;예전의 한 아이디로 프라이빗키를 받아 여러명이서 한 서버를 작업하기 위해 
공유해서 사용한 적이 있는데 처음에는 정상적으로 접속이 되다가 어느 순간 파일이 손상되어 사용할 수 없게 되니&lt;/p&gt;

  &lt;p&gt;나처럼 공유해서 사용하지 말고 깔끔하게 IAM 기능을 이용하여 공유하도록 하자&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 가상환경으로 접속해보자. &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스 상태&lt;/code&gt; 탭이 실행 중으로 바뀌었다면  &lt;code class=&quot;highlighter-rouge&quot;&gt;연결&lt;/code&gt;로 들어가서 가상환경에 접속할 준비를 한다. 그럼 3가지 탭 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2 인스턴스 연결&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Manager&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH 클라이언트&lt;/code&gt;이 보인다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EC2 인스턴스 연결&lt;/p&gt;

  &lt;p&gt;해당 연결은 브라우저창으로 연결하는 방법이지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;vi&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt;과 같은 텍스트 편집기를 사용하다 보면 가끔씩 화면이 깨지는 버그?가 생기기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH 클라이언트&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;pem키&lt;/code&gt; 접속을 하는 것을 추천한다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SSH 클라이언트&lt;/code&gt;로 접속하기에는 간단한 몇 가지 작업이 필요하다 
각 환경으로 설명하겠다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;리눅스 환경&lt;/p&gt;

  &lt;p&gt;우분투 환경일 경우에는 아래 나온 순서를 그대로 따라가면 된다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;windows10-환경&quot;&gt;Windows10 환경&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
윈도우에서는 chmod 400 권한 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;파일 보안 권한&lt;/code&gt;을 주면 된다
폴더를 하나 생성하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;pem&lt;/code&gt;키를 넣어 준후 
&lt;code class=&quot;highlighter-rouge&quot;&gt;폴더 속성&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;보안 탭&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;고급&lt;/code&gt; 버튼을 클릭한다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;Administrators&lt;/code&gt; 그룹을 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용 권한 변경&lt;/code&gt; 을 누르고 
하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;[상속 사용 안함]&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;상속 권한 모두 제거합니다&lt;/code&gt; 클릭 한다&lt;/p&gt;

&lt;p&gt;아래처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안&lt;/code&gt;탭으로 돌아와 &lt;code class=&quot;highlighter-rouge&quot;&gt;편집&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;추가&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;고급&lt;/code&gt; 클릭한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111516963-e19e6e00-8797-11eb-9ef3-22e25d9b0b57.png&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;개체 유형&lt;/code&gt;을 클릭하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자&lt;/code&gt;를 제외하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;체크&lt;/code&gt;를 없애자
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;지금 찾기&lt;/code&gt; 버튼을 눌러 현재  &lt;code class=&quot;highlighter-rouge&quot;&gt;윈도우 계정명&lt;/code&gt;을 클릭 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;확인&lt;/code&gt; 클릭하고 다시 확인을 하여 계정을 추가한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111517884-e7488380-8798-11eb-9c5d-60e6c047f695.png&quot; alt=&quot;img3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래처럼 세 항목만 &lt;code class=&quot;highlighter-rouge&quot;&gt;허용&lt;/code&gt;을 하고 적용하자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111518234-38587780-8799-11eb-8ad7-86ce8c9087f2.png&quot; alt=&quot;img4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 모든 준비가 끝났다
&lt;code class=&quot;highlighter-rouge&quot;&gt;CMD&lt;/code&gt;를 열어서 
&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -i 폴더/전체/경로/암호키파일명.pem 서버사용자명@퍼블릭IP주소&lt;/code&gt;를 넣어주자
ex] ssh -i C:\download\example.pem ubuntu@127.0.0.1&lt;/p&gt;

&lt;p&gt;위에&lt;code class=&quot;highlighter-rouge&quot;&gt;서버사용자명&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭IP주소&lt;/code&gt;는  아래처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2 인스턴스 연결&lt;/code&gt; 탭에 나와 있다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111519347-55417a80-879a-11eb-986a-bee2c3d8dc57.png&quot; alt=&quot;img5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에서 가상 환경의 컴퓨터가 준비 되었지만 아직 빈 깡통이므로
다음 블로그에서는 필요한 여러 도구들을 추가하는 과정을 적어나가도록 하겠다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다.&lt;br /&gt;&lt;/span&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 
    &lt;br /&gt;혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다.
&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy2&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Kirk0201</name>
        
        
      </author>

      

      
        <category term="Aws" />
      

      
        <summary type="html">AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다. 해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다. AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(1) AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(2)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(2)</title>
      <link href="http://localhost:4000/server-deploy2" rel="alternate" type="text/html" title="AWS를 이용하여 서버 배포 및 HTTPS를 위해 Certbot으로 인증서 받기(2)" />
      <published>2021-02-09T18:00:00+09:00</published>
      <updated>2021-02-09T18:00:00+09:00</updated>
      <id>http://localhost:4000/server-deploy2</id>
      <content type="html" xml:base="http://localhost:4000/server-deploy2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다.&lt;br /&gt;&lt;/span&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 
    &lt;br /&gt;혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다.
&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy2&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;지난 시간에 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;를 통해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;로 가상 환경에 컴퓨터를 만들었고
우린 이 빈 컴퓨터에 서버 구동을 위한 도구들을 설치해 나갈 것이다&lt;/p&gt;

&lt;p&gt;우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt; 가상환경에 접속을 하고
 &lt;code class=&quot;highlighter-rouge&quot;&gt;node.js&lt;/code&gt;로 서버를 구성했기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;node.js&lt;/code&gt;를 설치하겠다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;nvm을-이용하여-nodejs-설치&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NVM&lt;/code&gt;을 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Node.js&lt;/code&gt; 설치&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;build-essential libssl-dev

curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; install_nvm.sh // 한 줄

bash install_nvm.sh
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.profile

nvm &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# nvm 설치 확인&lt;/span&gt;
nvm ls-remote         &lt;span class=&quot;c&quot;&gt;# 설치 가능한 버전 리스트를 보고 싶을때&lt;/span&gt;
nvm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;version&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# node원하는 버전을 설치 예시 - nvm install 14.15.0&lt;/span&gt;

node &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 확인&lt;/span&gt;
nvm &lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;default 버전 &lt;span class=&quot;c&quot;&gt;# 해당 버전을 default값으로 설정한다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;Node.js&lt;/code&gt;가 설치가 완료되었으면 다음으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx &lt;/code&gt;로 웹서버를 돌려서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Certbot&lt;/code&gt;을 이용하여  &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTTPS&lt;/code&gt;를 위한 인증서를 발급 받을 것이다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111656692-1a991a00-884e-11eb-9e8b-876117c0193c.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-nginx-설치&quot;&gt;2. Nginx 설치&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nginx

/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 참고 사항

systemctl start nginx // nignx 시작 확인
systemctl status nginx // nginx 상태 확인
systemctl stop nginx // nginx 정지
	
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/nginx/sites-available/default 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래와 같이 server_name에 &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt; 명을 입력하고
location / {} 안에 proxy_pass http://localhost:4000 을 추가해준다
중간에 보이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt;값들은 아래처럼 주석처리 해준다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111669772-78cbfa00-885a-11eb-8de2-d3620794daff.png&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-certbot-설치&quot;&gt;3. Certbot 설치&lt;/h1&gt;

&lt;p&gt;인증서를 발급 받기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Certbot&lt;/code&gt;을 설치해 준다
&lt;a href=&quot;https://certbot.eff.org/&quot;&gt;Certbot&lt;/a&gt; 해당 페이지에 상세한 설명이 나와있다.&lt;/p&gt;

&lt;p&gt;위 페이지에 가서 &lt;code class=&quot;highlighter-rouge&quot;&gt;install certbot&lt;/code&gt;을 해준다. 그 후 나오는 페이지에서 우리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nginx&lt;/code&gt;로 인증을 받기 때문에
&lt;code class=&quot;highlighter-rouge&quot;&gt;Nginx&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt; 환경인 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 20.04&lt;/code&gt;를 선택한다.&lt;/p&gt;

&lt;p&gt;그럼 설치를 단계별로 알려주는 페이지가 나오는데 그 과정을 살펴보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;snap&lt;/code&gt;을 최신화하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;snap&lt;/code&gt;을 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;certbot&lt;/code&gt;을 설치하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;를 통해 인증서를 발급 한다는 내용이다&lt;/p&gt;

&lt;p&gt;특별한게 없으니 설명대로 따라가자.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;snap&lt;/code&gt;을 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;certbot&lt;/code&gt;을 설치하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;snap&lt;/code&gt;을 설치 또는 최신버전인지 확인한다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/112633494-c2c96700-8e7c-11eb-9c40-daab4e1dab91.png&quot; alt=&quot;img_1&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo snap install --classic certbot&lt;/code&gt;을 이용하여 설치한다
&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ln -s /snap/bin/certbot /usr/bub/certbot&lt;/code&gt; 명령어를 통해 복사해 온다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/112633728-0fad3d80-8e7d-11eb-8afe-0ea6442ed31e.png&quot; alt=&quot;img_2&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo certbot --nginx&lt;/code&gt;를 이용하여 실행한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/112634454-f5c02a80-8e7d-11eb-9de1-97967e5ddc1a.png&quot; alt=&quot;img_3&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;certbot&lt;/code&gt;이 실행되면 아래와 같은 선택지가 나오는데 다음과 같이 따라하자
    &lt;ol&gt;
      &lt;li&gt;본인의 이메일을 적어 넣자.&lt;/li&gt;
      &lt;li&gt;약관의 동의하는가? &lt;code class=&quot;highlighter-rouge&quot;&gt;Y&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;EFF의 소식을 이메일로 받을 것인가? &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;4번째 항목에서는 위에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;server_name&lt;/code&gt;에 추가한 주소가 나올 것이다.
콤마와 스페이스로 추가할 번호를 적어주자 ex) 1 2&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/112635476-38cecd80-8e7f-11eb-9625-36dbc7ca7c30.png&quot; alt=&quot;img_4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/112636072-ee9a1c00-8e7f-11eb-8bd0-ca9c3a3cbb35.png&quot; alt=&quot;img_5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;성공적으로 발급이되면 아래와 같이 출력되는데 빨간선으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;SSL인증서&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;pem키&lt;/code&gt;가 생성되니 해당 키를 이용하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/letsencrypt/live/DNS명/fullchain.pem
/etc/letsencrypt/live/DNS명/privkey.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파란색 선은 인증서의 만료일이니 만료되기 전 갱신하는 것을 잊지 말자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/112636512-86980580-8e80-11eb-884e-cd129b49e5a2.png&quot; alt=&quot;img_6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에서 발급된 &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;를 본인이 작성한 서버에 추가하여 https 프로토콜로 구동해주면 된다&lt;/p&gt;

&lt;p&gt;예제 코드는 다음과 같다&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// const는 변수 선언입니다.&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// letsencrypt로 받은 인증서 경로를 입력해 줍니다.&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;ca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;letsencrypt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;도메인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이름&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fullchain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pem&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;letsencrypt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;도메인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이름&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pem&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;letsencrypt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;도메인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이름&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pem&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 이 부분이 https서버를 만드는 부분&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 사이트 접속 시 나오는 내용입니다.&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;이슈&quot;&gt;이슈&lt;/h2&gt;

&lt;h4 id=&quot;1-인증서-접근-에러-이슈&quot;&gt;1. 인증서 접근 에러 이슈&lt;/h4&gt;

&lt;p&gt;나는 위 모든 작업을 마무리하고 인증서와 서버를 연결할 때 아래와 같은 문제가 발생하였다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo npm start&lt;/code&gt;를 하면 쉽게 해결이 되지만 보안적인 측면으로 좋지 않은 방법이라고 하여 아래와 같이 진행하였다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/letsencrypt/live/{DNS명}/fullchain.pem&lt;/code&gt;경로로 &lt;strong&gt;permission denied 에러&lt;/strong&gt;가 발생한다면
우분투에 특정 &lt;code class=&quot;highlighter-rouge&quot;&gt;group&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;를 생성하여 접근 권한을 주는 방식으로 해결하였다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stack overflow&lt;/code&gt;에 해당 글을 참고하였다 &lt;a href=&quot;https://stackoverflow.com/questions/48078083/lets-encrypt-ssl-couldnt-start-by-error-eacces-permission-denied-open-et&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Create group with root and nodeuser as members
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;addgroup nodecert
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser nodeuser
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser nodeuser nodecert
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser root nodecert

// Make the relevant letsencrypt folders owned by said group.
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chgrp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; nodecert /etc/letsencrypt/live
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chgrp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; nodecert /etc/letsencrypt/archive

// Allow group to open relevant folders
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 750 /etc/letsencrypt/live
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 750 /etc/letsencrypt/archive

// nodeuser로 사용자 변경
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su nodeuser

// 사용자 나가기?
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 사용자변경 명령어를 입력한뒤 다시 서버를 구동하면 해결될 것이다.&lt;/p&gt;

&lt;h4 id=&quot;2-443포트에-접근할-수-없는-에러&quot;&gt;2. 443포트에 접근할 수 없는 에러&lt;/h4&gt;

&lt;p&gt;위 방법을 해결하니 &lt;code class=&quot;highlighter-rouge&quot;&gt;Error: listen EACCES: permission denied 0.0.0.0:443&lt;/code&gt;이 에러가 발생했다.
찾아보니 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;를 생성하여 해당 사용자 환경에서 서버를 구동하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;권한이 아니기 때문에
사용할 수 없다는 것을 알게 되었다.&lt;/p&gt;

&lt;p&gt;일반 사용자가 &lt;code class=&quot;highlighter-rouge&quot;&gt;1024 포트&lt;/code&gt; 아래의를 사용하기 위해서는, &lt;code class=&quot;highlighter-rouge&quot;&gt;1024포트&lt;/code&gt; 위의 숫자로 서버를 띄우고, 해당 포트로
들어오는 요청을 &lt;code class=&quot;highlighter-rouge&quot;&gt;443 포트&lt;/code&gt;로 리다이렉트 해줌으로써 해결한다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 포트 확인
// netstat이 설치되어 있지 않다면 설치 명령어가 출력되니 설치하여 사용  
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;netstat &lt;span class=&quot;nt&quot;&gt;-ntl&lt;/span&gt;

// 포트 상태 확인
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;iptables &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; nat &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt;

// 리다이렉트
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;iptables &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; nat &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; PREROUTING &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; tcp &lt;span class=&quot;nt&quot;&gt;--dport&lt;/span&gt; 443 &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; REDIRECT &lt;span class=&quot;nt&quot;&gt;--to-port&lt;/span&gt; 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 명령어를 사용하여 리다이렉트를 해주고 포트 상태 확인 명령어로 리다이렉트가 제대로 설정되었는지 확인한 뒤 기존 서버를 &lt;code class=&quot;highlighter-rouge&quot;&gt;4000 포트 -&amp;gt; 8080 포트&lt;/code&gt;(내 기존 포트는 4000 이었다)로 바꿔 구동하고 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;nodeuser&lt;/code&gt;로 가서 실행하면 해결된다.&lt;/p&gt;

&lt;h4 id=&quot;3-nodeuser에-sudo-권한-설정&quot;&gt;3. nodeuser에 sudo 권한 설정&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nodeuser&lt;/code&gt;사용자로 &lt;code class=&quot;highlighter-rouge&quot;&gt;pm2&lt;/code&gt;가 설치 되지 않는 에러가 발생시 아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo 권한&lt;/code&gt;을 추가하여 진행하였다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// root로 접근
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su

// 해당 파일에 특정 유저 계정이름이 추가되야 root 권한이 부여
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/sudoers

// 아래 명령어를 찾는다
root &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL:ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL

// 위 명령어 하단에 유저 계정 추가
계정명 &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL:ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL
ex] nodeuser &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL:ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ALL

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-pm2-설치&quot;&gt;4. PM2 설치&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PM2&lt;/code&gt;는 우리가 OS를 종료하거나 컴퓨터를 종료하더라도 서버를 계속 유지시키는 &lt;code class=&quot;highlighter-rouge&quot;&gt;process manager&lt;/code&gt;이다&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install pm2 -g&lt;/code&gt;를 이용하여 설치하자&lt;/p&gt;

&lt;p&gt;사용법은 아주 간단하다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pm2 examples&lt;/code&gt;를 치면 알기 쉬운 여러 예제들이 나오니 참고하여 실행하면 된다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 서버를 실행할 스크립트를 넣는다
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pm2 start app.js &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; app

// pm2 상태 확인
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pm2 status

// pm2 시작
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pm2 start

// pm2 모니터로 로그확인
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pm2 monit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다.&lt;br /&gt;&lt;/span&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 
    &lt;br /&gt;혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다.
&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy2&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Kirk0201</name>
        
        
      </author>

      

      
        <category term="Aws" />
      

      
        <summary type="html">AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다. 해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다. AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">AWS를 이용하여 클라이언트 배포 및 HTTPS 인증 받기 (2)</title>
      <link href="http://localhost:4000/front-deploy2" rel="alternate" type="text/html" title="AWS를 이용하여 클라이언트 배포 및 HTTPS 인증 받기 (2)" />
      <published>2021-02-07T18:00:00+09:00</published>
      <updated>2021-02-07T18:00:00+09:00</updated>
      <id>http://localhost:4000/front-deploy2</id>
      <content type="html" xml:base="http://localhost:4000/front-deploy2">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다.&lt;br /&gt;&lt;/span&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 
    &lt;br /&gt;혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다.
&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy2&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;어제 우리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;설정까지 끝냈다.
이제 두 가지 정도의 과정이 남았는데 한가지는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Route53&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS cerification&lt;/code&gt;을 이용할 것이다.&lt;/p&gt;

&lt;p&gt;여기서 의문을 갖는 사람도 있을 것이라 생각한다. 전 과정 첫번째에서 이미 무료로 &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt;를 만들었는데 
왜 &lt;code class=&quot;highlighter-rouge&quot;&gt;Route53&lt;/code&gt;을 또 쓰는지에 관한 의문일 것이라 생각한다.&lt;/p&gt;

&lt;p&gt;그 이유는 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS 프로토콜&lt;/code&gt;을 위한 인증서를 받는 과정의 일환으로써 이용하는 것이다.&lt;/p&gt;

&lt;p&gt;우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;Route 53&lt;/code&gt;에 접속하여 호스팅 영역 생성을 해주자.&lt;/p&gt;

&lt;p&gt;이전 과정 &lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;에서 생성했던 도메인으로 넣어주면 되겠다 이후 완료 &lt;code class=&quot;highlighter-rouge&quot;&gt;영역 생성 버튼&lt;/code&gt;을 눌러주자
(ex : example.com)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111439053-4f22ae00-8748-11eb-8958-c7285ad9d94d.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과물로 아래와 같이 4개의 ns 값이 생성되는데 이 주소를 그대로 복사하고 
&lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;으로 다시 이동하자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111439621-e5ef6a80-8748-11eb-94f4-1ac7870dc402.png&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 4개를 아래의 위치에 붙여 넣어주자
&lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;manage domain&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;management tool&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;name server&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Use custom&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;단 4개의 주소 끝의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;은 제외하도록 한다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111440200-775edc80-8749-11eb-88e1-3d9233d3a404.png&quot; alt=&quot;img3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Route 53&lt;/code&gt;으로 돌아와서 &lt;code class=&quot;highlighter-rouge&quot;&gt;레코드 생성&lt;/code&gt; 버튼을 눌러주자&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;만약 빠른 레코드 생성으로 접속되었다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;마법사로 전환&lt;/code&gt; 버튼을 클릭하자&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;첫 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 정책&lt;/code&gt;은 Default 값인 단순 라우팅을 선택하고 넘어가자
그 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;레코드 구성 탭&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;레코드 생성&lt;/code&gt; 버튼을 클릭하자&lt;/p&gt;

&lt;p&gt;첫 번째 원에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;에서 발급받은 주소가 적혀 있을 것이고
두 번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;값/트래픽 라우팅 대상&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront 배포에 대한 별칭&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;미국 동부&lt;/code&gt;로 선택하자
그리고 배포 선택에는&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Distribution settings&lt;/code&gt;-&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;general&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;domain name&lt;/code&gt;
복사하여 넣어주고 생성하면 완료된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111441627-d4a75d80-874a-11eb-9eef-7e4988adad04.png&quot; alt=&quot;img4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certification&lt;/code&gt;을 이용하여 인증서를 발급받기 위해
&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Certificate Manager&lt;/code&gt;로 접속하자
그럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;인증서 프로비저닝&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;사설 인증 기관&lt;/code&gt; 두 가지 항목 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;인증서 프로비저닝&lt;/code&gt;으로 시작한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111446429-bdb73a00-874f-11eb-8d78-73fc635f217d.png&quot; alt=&quot;img5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;에서 발급 받은 주소를 &lt;code class=&quot;highlighter-rouge&quot;&gt;www.&lt;/code&gt;을 붙인 것과 안 붙인것 두 개를 넣어주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111446954-4afa8e80-8750-11eb-901b-8279384fea62.png&quot; alt=&quot;img6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 과정을 실행하고 나오는 &lt;code class=&quot;highlighter-rouge&quot;&gt;태그 추가&lt;/code&gt;는 생략하고 넘어가자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111447212-8dbc6680-8750-11eb-9118-221ff34f9e94.png&quot; alt=&quot;img7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래와 같은 화면이 나오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;도메인&lt;/code&gt;명을 클릭하여 주자 그럼 그 아래 사진과 같은 버튼이 활성화 되니
두 개 모두 활성화 시키자 그럼 자동으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;cname값&lt;/code&gt;이 추가 된다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111447615-f3a8ee00-8750-11eb-98f3-a20f11fd7527.png&quot; alt=&quot;img8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111447801-23f08c80-8751-11eb-9540-cdf43ec496dd.png&quot; alt=&quot;img9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 발급될 때까지 기다리도록 하자 경우에 따라 발급받는데 시간이 걸릴 수도 있으니 여유를 가지고 기다리도록하자. 
검증 성공으로 발급이 완료가 되었다면&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;로 돌아가서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Distribution settings&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit&lt;/code&gt;로 들어가 주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111491178-fde1e100-877e-11eb-9da7-6a9b638f6d8b.png&quot; alt=&quot;img9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CNAMEs&lt;/code&gt;에는 인증서 발급 때 적었던 &lt;code class=&quot;highlighter-rouge&quot;&gt;도메인 명&lt;/code&gt;을 적어주자 ex) example.com
                                                                                                          www.example.com
규칙으로는 다음 줄에 이어서 적어도 되고 &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;를 이용하여 추가하여도 된다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;인증서가 정상적으로 발급되었다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;SSL Certificate&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Custom SSL Ceritificate&lt;/code&gt;가  활성화 되었을 것이다.  위 그림에서 세 번째 원을 클릭해서 인증서를 선택할 수 있다
반대로 인증서가 발급되었는데 활성화가 되지 않았거나 클릭이 안된다면 ` 쿠키`를 모두 삭제하고 다시 로그인하여 보자.&lt;/p&gt;

  &lt;p&gt;보시다시피 위 사진처럼 활성화가 안되서 당황했지만 이 같은 방법으로 해결이 되었으니 참고 바란다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 인증서를 추가했기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;General&lt;/code&gt; 탭에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Behaviors&lt;/code&gt; 탭 으로 이동하여
&lt;code class=&quot;highlighter-rouge&quot;&gt;Edit&lt;/code&gt;에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Viewer Protocol Policy&lt;/code&gt; 항목을&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP and HTTPS&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Redirect HTTP to HTTPS&lt;/code&gt;로 바꿔 완료해주자&lt;/p&gt;

&lt;p&gt;이제 모든 작업이 끝낫으니 본인의 사이트로 이동하여&lt;code class=&quot;highlighter-rouge&quot;&gt; HTTPS 프로토콜&lt;/code&gt;을 이용하는지 확인하자&lt;/p&gt;

&lt;p&gt;이것으로 클라이언트 배포 부분을 마치겠다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kirk0201</name>
        
        
      </author>

      

      
        <category term="Aws" />
      

      
        <summary type="html">AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다. 해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다. AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">AWS를 이용하여 클라이언트 배포 및 HTTPS 인증 받기 (1)</title>
      <link href="http://localhost:4000/front-deploy" rel="alternate" type="text/html" title="AWS를 이용하여 클라이언트 배포 및 HTTPS 인증 받기 (1)" />
      <published>2021-02-06T17:00:00+09:00</published>
      <updated>2021-02-06T17:00:00+09:00</updated>
      <id>http://localhost:4000/front-deploy</id>
      <content type="html" xml:base="http://localhost:4000/front-deploy">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다.&lt;br /&gt;&lt;/span&gt;
&lt;span class=&quot;table-of-contents-list&quot;&gt;해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 
    &lt;br /&gt;혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다.
&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./front-deploy2&quot;&gt;AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
오늘은 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;를 이용하여 배포하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS 인증&lt;/code&gt;을 받는 과정을 써보려고 한다. 그동안 과금 문제로 닫아두었던 프로젝트 파일들을 이용할 예정이다.&lt;br /&gt;몇 천원도 안되는 가격이지만 백수에게는 그마저 부담스럽다… &lt;br /&gt;무튼 클라이언트와 서버가 미리 준비되어 있기 때문에 배포에 관련해서만 다룰 것이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;를 이용하지 않고 다른 무료 플랫폼을 찾아 무료로 배포해보려고 했지만 
정적인 웹이 아닌 동적인 웹페이지를 완전 무료로 배포하는데는 한계가 있는것 같다.
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;로 배포하는 방법을 복습할겸
&lt;code class=&quot;highlighter-rouge&quot;&gt;NOTION&lt;/code&gt;에 정리했던 문서를 블로깅할겸 작성해 나가겠다.&lt;/p&gt;

&lt;h1 id=&quot;1-freenom을-이용하여-dns를-무료로-설정&quot;&gt;1. Freenom을 이용하여 DNS를 무료로 설정&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;을 이용하는데 앞서 간단하게 &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt;에 대해서 알아보도록 하겠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DNS(Domain Name System)란&lt;/p&gt;

  &lt;p&gt;IP주소(예: 192.0.2.44)를 사람이 읽기 쉬운 어떤 문자로 변환하는 것을 말한다&lt;/p&gt;

  &lt;p&gt;우리는 평소에 DNS를 이용하기 때문에 숫자로된 &lt;code class=&quot;highlighter-rouge&quot;&gt;IP주소&lt;/code&gt;가 아닌 문자들로 구성된 주소로
원하는 페이지에 이동이 가능한 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;으로 이동하여 진행해 보자.&lt;/p&gt;

&lt;h2 id=&quot;freenom&quot;&gt;&lt;a href=&quot;https://www.freenom.com/&quot;&gt;Freenom&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;해당 페이지로 이동하여 회원가입 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Register a new domain&lt;/code&gt; 클릭&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111301659-d06d3880-8695-11eb-97f3-d0f0a5f2d003.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 &lt;code class=&quot;highlighter-rouge&quot;&gt;빨간네모&lt;/code&gt;에 원하는 주소명을 입력하면 이용가능한 &lt;code class=&quot;highlighter-rouge&quot;&gt;최상위 도메인&lt;/code&gt;이 나온다. &lt;br /&gt;
원하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;도메인&lt;/code&gt;을 선택 후 가장 아래 &lt;code class=&quot;highlighter-rouge&quot;&gt;Checkout&lt;/code&gt; 버튼을 눌러주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111301914-1a561e80-8696-11eb-9ef2-3ad2a0eec7a6.png&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Freenom&lt;/code&gt;은 최고 1년까지 무료로 &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt;를 이용할 수 있다.&lt;br /&gt; 추가로 이용하고 싶다면 1년마다 갱신을 해줘야 한다. &lt;br /&gt;하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;무료&lt;/code&gt;이다 보니 DNS 유지에 대해서 말이 많다. &lt;br /&gt;좋은 단어로 구성된 DNS명 경우 하루아침에 빼앗아 가는 경우도 있다고 하니&lt;br /&gt; 부담 없는 프로젝트에서 이용하길 바란다.&lt;/p&gt;

&lt;p&gt;어쨋든 우리는&lt;code class=&quot;highlighter-rouge&quot;&gt;Period&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;무료&lt;/code&gt;로 가장 길게 이용할 수 있는 12달을 선택하여주자.
&lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;를 누르고 다시 확인 버튼을 누르면 생성이 완료된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111304516-2ee7e600-8699-11eb-8e38-e861df02725c.png&quot; alt=&quot;img3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Services&lt;/code&gt;에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;My domains&lt;/code&gt;에 내가 선택한 DNS가 들어왔는지 확인해보자.&lt;/p&gt;

&lt;h1 id=&quot;2-aws-s3에-클라이언트를-업로드&quot;&gt;2. AWS S3에 클라이언트를 업로드&lt;/h1&gt;

&lt;p&gt;AWS는 회원가입시 12개월 동안 프리티어 모드로 이용이 가능하다. 단 회원가입시 신용카드가 필요하니 미리 준비해야한다. 그리고 처음에는 몰랐지만 프리티어라고 해서 완전 무료가 아니다. 어느 할당량 이상으로 사용하게 되면 자동으로 요금이 결제가 된다.&lt;/p&gt;

&lt;p&gt;요금 설명에 있는 프리티어 한계양을 보면 적은양이 아닌데 프로젝트때 4명이서 이용했는데 몇 천원정도 요금이 청구 되었었다. 정확한 계산법은 잘모르겠다… 
어쨋든 소액의 결제는 될수도있으니 너무 놀라지 말자!
자세한건 &lt;code class=&quot;highlighter-rouge&quot;&gt;결제탭&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;청구서&lt;/code&gt;에서 확인이 가능하며 알림 설정도 가능하다!&lt;/p&gt;

&lt;p&gt;그럼 S3에 대해서 간략하게 알아보겠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Amazon S3(Amazon Simple Storage Service)란?&lt;/p&gt;

  &lt;p&gt;인터넷 &lt;code class=&quot;highlighter-rouge&quot;&gt;스토리지&lt;/code&gt; 서비스이다. 용량에 관계 없이 파일을 저장 가능하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹(HTTP 프로토콜)에서 파일&lt;/code&gt;로 접근
가능하다. S3자체로도 블로그나 포트폴리오 페이지 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;정적 웹서비스&lt;/code&gt;가 가능하다.&lt;/p&gt;

  &lt;p&gt;동적 웹페이지와 정적 웹페이지가 섞여 있을때 &lt;code class=&quot;highlighter-rouge&quot;&gt;동적 웹페이지는 EC2&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;정적 웹페이지는 S3&lt;/code&gt;로 이용하면 성능과 비용을 모두 효율적으로 할 수 있다.&lt;/p&gt;

  &lt;p&gt;EC2와 EBS로 구축하는것 보다 비용이 저렴하다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;는 스토리지 서비스이다.&lt;br /&gt;
이 글을 쓰면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;스토리지와 DB의 차이&lt;/code&gt;가 궁금하여 찾아보았다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;스토리지란&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;컴퓨터에 데이터를 저장하는 저장소의 역할을 수행
즉 파일이 담긴다&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;DB란?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;통합하여 관리되는 데이터의 집합체를 의미
중복된 데이터를 없애고, 자료를 구조화하여, 효율적인 처리를 할 수 있다
그래서 여러 업무에 여러 사용자가 데이터 베이스를 이용 가능하다&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;스토리지와 DB 차이&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;스토리지는 파일 형태라면 무엇이든 담을 수 있지만
DB에 파일을 담기 위해서는 어떤 가공을 통해 담아야 한다&lt;/p&gt;

  &lt;p&gt;예를 들어 게시판에 글을 작성하면 DB에 저장되지만
첨부한 업로드는 스토리지에 담긴다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 본격적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;세팅 과정을 진행해보도록 하겠다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;콘솔에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;에 접속하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷&lt;/code&gt;이라는 항목이 나오는데 우린 여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷만들기&lt;/code&gt; 버튼을 눌러주자버킷의 이름은 고유해야하기 때문에 중복되지 않을 &lt;code class=&quot;highlighter-rouge&quot;&gt;고유한 이름&lt;/code&gt;으로 작성하고 
외부에서 접속이 가능하게 해야하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭 엑세스 차단&lt;/code&gt;을 해제하고 진행하도록 하자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111346907-09bb9d80-86c2-11eb-8bc6-81a9f3cba01a.png&quot; alt=&quot;img4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111347074-31126a80-86c2-11eb-9cc2-0926d8c91332.png&quot; alt=&quot;img5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷&lt;/code&gt;이 생성되었을 것이다.
미리 준비한 클라이언트 빌드 파일들을 버킷으로 업로드해 사용할 예정이기 때문에 해당 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷&lt;/code&gt;으로 접속하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;속성&lt;/code&gt;탭에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;정적 웹 사이트 호스팅&lt;/code&gt;을 편집해주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111347541-a8e09500-86c2-11eb-96b5-4f6d73303778.png&quot; alt=&quot;img6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111347641-be55bf00-86c2-11eb-9a7d-043638e523a8.png&quot; alt=&quot;img7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;권한&lt;/code&gt;탭으로 이동하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 정책&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;편집&lt;/code&gt; 버튼을 눌러 나오는 화면에서
&lt;code class=&quot;highlighter-rouge&quot;&gt;정책 생성기&lt;/code&gt;버튼을 클릭하여 다음 작업을 이어간다&lt;/p&gt;

&lt;p&gt;아래 사진에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Actions&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetObject&lt;/code&gt;를 선택하였다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;Amazon Reasource Name&lt;/code&gt;은 해당 &lt;code class=&quot;highlighter-rouge&quot;&gt;input&lt;/code&gt;아래 예제가 적혀있으니 참고하여 적길바란다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111348011-1f7d9280-86c3-11eb-9b24-09e8a12a9b40.png&quot; alt=&quot;img8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모든 작업이 완료 되었다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Statement&lt;/code&gt; 버튼을 클릭하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Generate Policy&lt;/code&gt;로 정책을 생성해 준다. 이후 나온 정책을 복사하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷 정책 편집&lt;/code&gt; 페이지에 붙여넣고 저장해주자&lt;/p&gt;

&lt;p&gt;이제 클라이언트 &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; 폴더의 내용을 업로드 한다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;폴더를 업로드할때 파일들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷&lt;/code&gt; 최상위로 업로드 해야한다&lt;/p&gt;

  &lt;p&gt;예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;라는 폴더 안에 파일들이 존재한다면 버킷&lt;code class=&quot;highlighter-rouge&quot;&gt;엔드포인트&lt;/code&gt;에서 정상적으로
웹페이지가 출력되지 않을 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;3-cloudfront-설정&quot;&gt;3. CloudFront 설정&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;에서 제공해주는 엔드포인트로도 배포가 가능하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;를 이용하는 이유는 다음과 같다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTPS 배포&lt;/li&gt;
  &lt;li&gt;엣지 로케이션을 이용한 더 빠른 속도&lt;/li&gt;
  &lt;li&gt;S3 직접 공유보다 저렴한 비용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;안타깝게도 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;에서 제공하는 주소는 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;가아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;주소라 보안에 취약하다.
하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;를 이용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;로 쉽게 배포할수 있게 도와준다.&lt;/p&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;를 이용해 직접 배포하는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt; 버킷으로 설정한 &lt;code class=&quot;highlighter-rouge&quot;&gt;지역의 저장소로만&lt;/code&gt; 전세계 사용자가 요청을 보내 먼 곳에서 요청이 올수록 속도가 느려지지만&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;를 사용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;전세계 모든 엣지 로케이션&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;캐싱&lt;/code&gt;을 해두고 유저와 가장 가까운 엣지에 요청을 보내도록하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;로 직접 배포하는 것보다 속도가 빠르다.&lt;/p&gt;

&lt;p&gt;또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;의 요금이 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt; 요금보다 저렴하여 비용절감 효과도 있다&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;그럼 AWS 콘솔에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront&lt;/code&gt;를 찾아 접속하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Distribution&lt;/code&gt;이라는 버튼을 클릭하여
아래와 같이 세팅하여 준다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Origin Domain Name&lt;/code&gt;을 클릭하면 방금 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;에서 만든 버킷 주소를 선택할 수 있다
&lt;code class=&quot;highlighter-rouge&quot;&gt;Origin ID&lt;/code&gt;도 위 버킷 주소가 클릭되면 자동으로 작성된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Viewer Protocol Policy&lt;/code&gt;에서 현재 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS 주소&lt;/code&gt;가 없다면 첫번째를 선택하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS 주소&lt;/code&gt;가 존재한다면 두 번째로 선택해서 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;리다이렉트&lt;/code&gt; 시켜주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111352067-273f3600-86c7-11eb-8426-235b79fc27c4.png&quot; alt=&quot;img9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;쭉 내리다보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Default Root Object&lt;/code&gt; 항목에 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;을 반드시 넣어주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111353028-35da1d00-86c8-11eb-828f-82ecd6082e3e.png&quot; alt=&quot;img10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;React&lt;/code&gt;를 이용한 프로젝트일 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;react-route-dom&lt;/code&gt;을 이용한다면 다음 설정이 필요하다&lt;/p&gt;

&lt;p&gt;방금 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Distribution&lt;/code&gt;을 클릭하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Distribution Settings&lt;/code&gt;로 이동한다
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Error Pages&lt;/code&gt;탭으로 이동하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Custom Error Response&lt;/code&gt; 버튼을 클릭해 해주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111353299-82bdf380-86c8-11eb-8e6e-7ee5b4f9f44a.png&quot; alt=&quot;img11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래와 같이 설정해 주자&lt;/p&gt;

&lt;p&gt;추가로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Error code 403&lt;/code&gt;으로도 동일하게 추가 페이지를 작성해주자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45046152/111353770-f4963d00-86c8-11eb-899c-c81320858ea9.png&quot; alt=&quot;img12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 클라이언트 배포는 거의 마무리 되어 간다&lt;/p&gt;

&lt;p&gt;글이 너무 길어져 나머지는 2편에서 이어가도록 하겠다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kirk0201</name>
        
        
      </author>

      

      
        <category term="Aws" />
      

      
        <summary type="html">AWS를 이용하여 배포하기는 여러 절로 구성되어 있습니다. 해당글은 직접 경험을 바탕으로 정리한 것을 공유하는 글입니다. 혹시 잘못된 정보거나 부족한 정보에 대해 피드백을 주신다면 감사하겠습니다. AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(1) AWS를 이용하여 클라이언트 배포 및 HTTPS를 위한 인증서 받기(2) 오늘은 AWS를 이용하여 배포하고 HTTPS 인증을 받는 과정을 써보려고 한다. 그동안 과금 문제로 닫아두었던 프로젝트 파일들을 이용할 예정이다.몇 천원도 안되는 가격이지만 백수에게는 그마저 부담스럽다… 무튼 클라이언트와 서버가 미리 준비되어 있기 때문에 배포에 관련해서만 다룰 것이다.</summary>
      

      
      
    </entry>
  
</feed>
